name: Psalm Taint analysis
description: |
  Run psalm with --taint-analysis and upload sarif file artifact

inputs:
  report-retention-days:
    description: "Duration in days to preserve reports."
    required: false
    default: "5"
  working-directory:
    description: "Workflow working directory"
    default: '.'
    required: false
  defectdojo-publish:
    description: "Publish sarif report to defectdojo"
    required: false
    default: 'false'
  defectdojo-url:
    description: "DefectDojo URL"
    required: false
    default: ''
  defectdojo-token:
    description: "DefectDojo Token"
    required: false
    default: ''
  defectdojo-engagement:
    description: "DefectDojo Engagement name or id"
    required: false
    default: ''


runs:
  using: "composite"
  steps:
    - name: Taint analysis
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: ./vendor/bin/psalm --taint-analysis --report=psalm-taint-analysis.sarif

    - name: Store results.sarif
      uses: actions/upload-artifact@v3
      if: "!cancelled()"
      with:
        name: psalm-taint-analysis.sarif
        path: ${{ inputs.working-directory }}/psalm-taint-analysis.sarif
        retention-days: ${{ inputs.report-retention-days }}

    - name: Publish report
      if: inputs.defectdojo-publish == 'true'
      id: import-scan
      uses: ivanamat/defectdojo-import-scan@v1
      with:
        token: ${{ inputs.defectdojo-token }}
        defectdojo_url: ${{ inputs.defectdojo-url }}
        file: ${{ inputs.working-directory }}/psalm-taint-analysis.sarif
        scan_type: SARIF
        engagement: ${{ inputs.defectdojo-engagement }}

    - name: Show response
      if: inputs.defectdojo-publish == 'true'
      shell: bash
      run: |
        set -e
        printf '%s\n' '${{ steps.import-scan.outputs.response }}'
